# --
# Copyright (C) 2001-2016 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --
#  Note:
#
#  -->> Most OTRS configuration should be done via the OTRS web interface
#       and the SysConfig. Only for some configuration, such as database
#       credentials and customer data source changes, you should edit this
#       file. For changes do customer data sources you can copy the definitions
#       from Kernel/Config/Defaults.pm and paste them in this file.
#       Config.pm will not be overwritten when updating OTRS.
# --

package Kernel::Config;

use strict;
use warnings;
use utf8;

sub Load {
    my $Self = shift;

    # ---------------------------------------------------- #
    # database settings                                    #
    # ---------------------------------------------------- #

    # The database host
    $Self->{'DatabaseHost'} ='localhost';

    # The database name
    $Self->{'Database'} = "otrs";

    # The database user
    $Self->{'DatabaseUser'} = "otrs";

    # The password of database user. You also can use bin/otrs.Console.pl Maint::Database::PasswordCrypt
    # for crypted passwords
    $Self->{'DatabasePw'} = '1qaz@3edc';

    # The database DSN for MySQL ==> more: "perldoc DBD::mysql"
    #$Self->{'DatabaseDSN'} = "DBI:Pg:dbname=$Self->{Database};host=$Self->{DatabaseHost}";

    # The database DSN for PostgreSQL ==> more: "perldoc DBD::Pg"
    # if you want to use a local socket connection
#    $Self->{DatabaseDSN} = "DBI:Pg:dbname=$Self->{Database};";
    # if you want to use a TCP/IP connection
    $Self->{DatabaseDSN} = "DBI:Pg:dbname=$Self->{Database};host=$Self->{DatabaseHost};";

    # The database DSN for Microsoft SQL Server - only supported if OTRS is
    # installed on Windows as well
#    $Self->{DatabaseDSN} = "DBI:ODBC:driver={SQL Server};Database=$Self->{Database};Server=$Self->{DatabaseHost},1433";

    # The database DSN for Oracle ==> more: "perldoc DBD::oracle"
#    $Self->{DatabaseDSN} = "DBI:Oracle://$Self->{DatabaseHost}:1521/$Self->{Database}";
#
#    $ENV{ORACLE_HOME}     = '/path/to/your/oracle';
#    $ENV{NLS_DATE_FORMAT} = 'YYYY-MM-DD HH24:MI:SS';
#    $ENV{NLS_LANG}        = 'AMERICAN_AMERICA.AL32UTF8';

    # ---------------------------------------------------- #
    # fs root directory
    # ---------------------------------------------------- #
    $Self->{Home} = '/opt/otrs';

    # ---------------------------------------------------- #
    # insert your own config settings "here"               #
    # config settings taken from Kernel/Config/Defaults.pm #
    # ---------------------------------------------------- #
    # $Self->{SessionUseCookie} = 0;
    # $Self->{CheckMXRecord} = 0;

    # ---------------------------------------------------- #

    # ---------------------------------------------------- #
    # data inserted by installer                           #
    # ---------------------------------------------------- #
    # $DIBI$




   # $Self->{LogModule}          = 'Kernel::System::Log::File';
   # $Self->{LogModule::LogFile} = '/opt/otrs/logs/otrs_ad.log';
    # $DIBI$
    $Self->{'DefaultCharset'} = 'utf-8';


#Enable LDAP authentication for Customers
  $Self->{'Customer::AuthModule'} = 'Kernel::System::CustomerAuth::LDAP';
  $Self->{'Customer::AuthModule::LDAP::Host'} = '10.1.30.12';
  $Self->{'Customer::AuthModule::LDAP::BaseDN'} = 'O=admin_jlb';
  #$Self->{'Customer::AuthModule::LDAP::BaseDN'} = 'ou=专用账号,dc=gdprh,dc=com';
  #$Self->{'Customer::AuthModule::LDAP::UID'} = 'sAMAccountName';
  $Self->{'Customer::AuthModule::LDAP::UID'} = 'uid';

#The following is valid but would only be necessary if the
#anonymous user do NOT have permission to read from the LDAP tree
  $Self->{'Customer::AuthModule::LDAP::SearchUserDN'} = 'admin_jlb';
  $Self->{'Customer::AuthModule::LDAP:::SearchUserDN'} = '1qaz@3edc';

#CustomerUser
#(customer user database backend and settings)
    $Self->{CustomerUser} = {
      Module => 'Kernel::System::CustomerUser::LDAP',
      Params => {
      Host => '10.1.30.12',
      BaseDN => 'cn=admin_jlb,ou=专用账号,dc=gdprh,dc=com',
      SSCOPE => 'sub',
      UserDN =>'admin_jlb',
      UserPw =>'1qaz@3edc',
    },
# customer unique id
    CustomerKey => 'uid',
    # customer #
    CustomerID => 'sn',
    CustomerUserListFields => ['uid', 'mail'],
 #  CustomerUserListFields => ['uid', 'sn', 'mail'],
    CustomerUserSearchFields => ['uid', 'mail'],
    CustomerUserSearchPrefix => '',
    CustomerUserSearchSuffix => '*',
    CustomerUserSearchListLimit => 250,
    CustomerUserPostMasterSearchFields => ['uid'],
    CustomerUserNameFields => ['uid', 'sn'],
    Map => [
      # note: Login, Email and CustomerID needed!
      # var, frontend, storage, shown, required, storage-type
      #[ 'UserSalutation', 'Title', 'title', 1, 0, 'var' ],
      [ 'UserFirstname', 'Firstname', 'sn', 1, 1, 'var' ],
      #[ 'UserLastname', 'Lastname', 'sn', 1, 1, 'var' ],
      [ 'UserLogin', 'Login', 'uid', 1, 1, 'var' ],
      [ 'UserEmail', 'Email', 'mail', 1, 1, 'var' ],
      [ 'UserCustomerID', 'CustomerID', 'sn', 0, 1, 'var' ],
     # [ 'UserPhone', 'Phone', 'telephonenumber', 1, 0, 'var' ],
      #[ 'UserAddress', 'Address', 'postaladdress', 1, 0, 'var' ],
      #[ 'UserComment', 'Comment', 'description', 1, 0, 'var' ],
    ],
  };


   # --------------------------------------------------- #
   # authentication sync settings                        #
   # (enable agent data sync. after succsessful          #
   # authentication)                                     #
   # --------------------------------------------------- #
   # This is an example configuration for an LDAP auth sync. backend.
   # (take care that Net::LDAP is installed!)
    $Self->{'AuthSyncModule'} = 'Kernel::System::Auth::Sync::LDAP';
    $Self->{'AuthSyncModule::LDAP::Host'} = '10.1.30.12';
    #$Self->{'AuthSyncModule::LDAP::BaseDN'} = 'ou=Users,dc=gdprh,dc=com';
    $Self->{'AuthSyncModule::LDAP::BaseDN'} = 'O=admin_jlb';
    #$Self->{'AuthSyncModule::LDAP::UID'} = 'uid';
    #$Self->{'AuthSyncModule::LDAP::UID'} = 'sAMAccountName';
    $Self->{'AuthSyncModule::LDAP::UID'} = 'uid';
 
   # The following is valid but would only be necessary if the
   # anonymous user do NOT have permission to read from the LDAP tree
    $Self->{'AuthSyncModule::LDAP::SearchUserDN'} = 'admin_jlb';
    $Self->{'AuthSyncModule::LDAP:::SearchUserDN'} = '1qaz@3edc';
   # in case you want to add always one filter to each ldap query, use
   # this option. e. g. AlwaysFilter => '(mail=*)' or AlwaysFilter => '(objectclass=user)'
   # $Self->{'AuthSyncModule::LDAP::AlwaysFilter'} = '';
 
   # AuthSyncModule::LDAP::UserSyncMap
   # (map if agent should create/synced from LDAP to DB after successful login)


 $Self->{'AuthSyncModule::LDAP::UserSyncMap'} = {
        # DB -> LDAP
        UserFirstname => 'sn',
      #  UserLastname  => 'sn',
		UserLogin  => 'uid',
        UserEmail     => 'mail',
		UserCustomerID     => 'sn',
    };


# Agent Authentication
    $Self->{'AuthModule1'} = 'Kernel::System::Auth::LDAP';
    $Self->{'AuthModule::LDAP::Host1'} = '10.1.30.12';
    #$Self->{'AuthModule::LDAP::BaseDN1'} = 'ou=专用账号,dc=gdprh,dc=com';
    #$Self->{'AuthModule::LDAP::BaseDN1'} = 'ou=Users,dc=gdprh,dc=com';
    $Self->{'AuthModule::LDAP::BaseDN1'} = 'O=admin_jlb';
    $Self->{'AuthModule::LDAP::UID1'} = 'uid';
    $Self->{'AuthModule::LDAP::SearchUserDN1'} = 'test1';
    $Self->{'AuthModule::LDAP::SearchUserPw1'} = 'test1';

 # Second backend, internal OTRS DB
    $Self->{'AuthModule2'} = 'Kernel::System::Auth::DB';
    $Self->{'AuthModule::DB::CryptType2'} = 'crypt';

# agent data sync against ldap
    $Self->{'AuthSyncModule'} = 'Kernel::System::Auth::Sync::LDAP';
    $Self->{'AuthSyncModule::LDAP::Host'} = '10.1.30.12';
    #$Self->{'AuthSyncModule::LDAP::BaseDN'} = 'ou=专用账号,dc=gdprh,dc=com';
    $Self->{'AuthSyncModule::LDAP::BaseDN'} = 'O=admin_jlb';
    $Self->{'AuthSyncModule::LDAP::UID'} = 'uid';
    $Self->{'AuthSyncModule::LDAP::SearchUserDN'} = 'admin_jlb';
    $Self->{'AuthSyncModule::LDAP:::SearchUserDN'} = '1qaz@3edc';
    $Self->{'AuthSyncModule::LDAP::UserSyncMap'} = {
        # DB -> LDAP
        UserFirstname => 'displayname',
        UserLastname  => 'sn',
        UserEmail     => 'mail',
    };


    # AuthSyncModule::LDAP::UserSyncInitialGroups
    # (sync following group with rw permission after initial create of first agent
    # login)
    $Self->{'AuthSyncModule::LDAP::UserSyncInitialGroups'} = [
        'users',
    ];



    # ---------------------------------------------------- #
    # ---------------------------------------------------- #
    #                                                      #
    # end of your own config options!!!                    #
    #                                                      #
    # ---------------------------------------------------- #
    # ---------------------------------------------------- #
}

# ---------------------------------------------------- #
# needed system stuff (don't edit this)                #
# ---------------------------------------------------- #

#use Kernel::Config::Defaults; # import Translatable()
#use base qw(Kernel::Config::Defaults);

use strict;
use warnings;

use vars qw(@ISA $VERSION);
$VERSION = qw($Revision: 1.23 $)[1];

use Kernel::Config::Defaults;
push (@ISA, 'Kernel::Config::Defaults');


# -----------------------------------------------------#

1;
